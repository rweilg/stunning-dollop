import Head from "next/head";
import {
  Flex,
  Button,
  useToast,
  useColorModeValue,
  useColorMode,
  HStack,
  VStack,
  FormControl,
  Input,
  Text,
  Box,
} from "@chakra-ui/react";
import Layout from "../components/Layout";
import React, { useState } from "react";
import { SingleDatepicker } from "../components/CustomDatePicker";
import { Field, Form, Formik } from "formik";
import Select from "../components/CustomSelect";

export default function Home() {
  const { colorMode, toggleColorMode } = useColorMode();
  function AddButton({ onOpen }) {
    return <Button onClick={toggleColorMode}>Theme</Button>;
  }
  const [date, setDate] = useState(new Date());
  const tags = [
    { value: "Work", label: "Work", color: "#213323", text: "#23c43c" },
    { value: "Holiday", label: "Holiday", color: "#332b21", text: "#e08512" },
    {
      value: "Entertainment",
      label: "Entertainment",
      color: "#213323",
      text: "#23c43c",
    },
    { value: "Fun", label: "Fun", color: "#332b21", text: "#e08512" },
  ];
  const usersList = [
    { value: "11", label: "Drew", rating: "5", url: "/26.jpg" },
    { value: "22", label: "Shirley", rating: "4", url: "/27.jpg" },
    { value: "33", label: "Brian", rating: "3", url: "/50.jpg" },
    { value: "44", label: "Austin", rating: "3", url: "/51.jpg" },
    { value: "55", label: "Yitong", rating: "2", url: "/55.jpg" },
    { value: "66", label: "Rasmus", rating: "4", url: "/79.jpg" },
  ];
  const choices = ["First", "Second", "Third"];
  const panelBG = useColorModeValue("#ffffff", "brand.bg");
  const borderColor = useColorModeValue(
    "brand.sidebarBorderLight",
    "brand.sidebarBorderDark"
  );
  const highlight = useColorModeValue("rgba(10, 132, 255, 1)", "#113ccf");
  const bg = useColorModeValue("brand.sidebarLight", "brand.sidebarDark");
  const mainBG = useColorModeValue("brand.bgLight", "#1b1c21");
  const [assignedTo, setAssignedTo] = useState([]);
  const [selectedTags, setSelectedTags] = useState([]);
  const [fetchedUsers, setFetchedUsers] = useState([]);
  const handleChangeAssignedTo = (users) => {
    setAssignedTo(users);
  };
  const handleTags = (tags) => {
    setSelectedTags(tags);
  };
  const toast = useToast();
  const toastIdRef = React.useRef();
  /*   function close() {
    if (toastIdRef.current) {
      toast.close(toastIdRef.current);
    }
   }*/
  return (
    <div style={{ width: "100%", height: "100%" }}>
      <Head>
        <title>Form Custom Inputs</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout title="Home">
        <Flex
          direction={["column", "column", "row"]}
          flexBasis={"initial"}
          flexShrink={"initial"}
          flexGrow={1}
          h={["100%", "60%"]}
          p={2}
          m={"0 auto"}
        >
          <VStack spacing={6} w="300px">
            <FormControl borderRadius={"full"} id="description" isRequired>
              <Text opacity={0.45} mb={2}>
                Label
              </Text>
              <Input p={5} bg={bg} placeholder="Bruce Wayne" />
            </FormControl>

            <Flex w="300px" direction="column" justify="flex-start">
              <Text opacity={0.45} mb={2}>
                Enumeration
              </Text>
            </Flex>

            <Flex w="300px" align="center" position="relative">
              <FormControl>
                <Text opacity={0.45} mb={2}>
                  Users
                </Text>
                <Select
                  isMulti
                  name="users"
                  options={usersList}
                  value={assignedTo}
                  onChange={handleChangeAssignedTo}
                  placeholder={`Users...`}
                  closeMenuOnSelect={false}
                />
              </FormControl>
            </Flex>

            <Flex w="300px" align="center" position="relative">
              <FormControl>
                <Text opacity={0.45} mb={2}>
                  Tags
                </Text>
                <Select
                  isMulti
                  name="users"
                  options={tags}
                  value={selectedTags}
                  onChange={handleTags}
                  placeholder={`Users...`}
                  closeMenuOnSelect={false}
                />
              </FormControl>
            </Flex>
          </VStack>

          <VStack spacing={4} ml={[0, 6]} w="300px">
            <Flex w={["80vw", "300px"]} direction="column">
              <Text opacity={0.45} mb={2}>
                Calendar
              </Text>
              <SingleDatepicker
                name="date-input"
                date={date}
                onDateChange={setDate}
              />
            </Flex>
          </VStack>

          <VStack ml={[0, 6]} align="start" mt={[8, 0]}>
            <Text fontSize="18px" fontWeight={600}>
              Selected date:
            </Text>
            <Text> {date.toDateString()} </Text>
            <Text></Text>

            <Text fontSize="18px" fontWeight={600}>
              Selected users:
            </Text>
            <Text>
              [
              {assignedTo.map((tag) => (
                <>
                  <Text display="inline">{tag.label}, </Text>
                  <Box display="inline" w="4px" />
                </>
              ))}
              ]
            </Text>
            <Box h={8} />
            <Text fontSize="18px" fontWeight={600}>
              Selected tags:
            </Text>
            <Text>
              [
              {selectedTags.map((tag) => (
                <>
                  <Text display="inline">{tag.label}, </Text>
                  <Box display="inline" w="4px" />
                </>
              ))}
              ]
            </Text>
          </VStack>
        </Flex>
      </Layout>
    </div>
  );
}
